name: Alerts (notify on CI result)

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

# Permissões para comentar em PR e abrir issues
permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Notify PR on success
        if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success' }}
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.workflow_run.pull_requests?.[0];
            if (pr) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `✅ CI passou no workflow **${context.payload.workflow_run.name}** (run #${context.payload.workflow_run.run_number}).`
              });
            }

      - name: Notify PR on failure
        if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion != 'success' }}
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.workflow_run.pull_requests?.[0];
            if (pr) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `❌ CI falhou no workflow **${context.payload.workflow_run.name}** (run #${context.payload.workflow_run.run_number}). Veja os logs em Actions.`
              });
            }

      # Sempre cria uma Issue ao final do CI (sucesso ou falha) para evidência de alerta
      - name: Create repo issue on result
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            const emoji = run.conclusion === 'success' ? '✅' : '❌';
            const title = `${emoji} Alerta: CI ${run.conclusion} (run #${run.run_number})`;
            const body = [
              `Branch: \`${run.head_branch}\``,
              `Workflow: **${run.name}**`,
              `Event: ${run.event}`,
              `Conclusão: **${run.conclusion}**`,
              ``,
              `Veja os detalhes em Actions.`
            ].join('\n');
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body
            });
